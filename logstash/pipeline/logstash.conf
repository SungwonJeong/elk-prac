input {
	beats {
		port => 5044
	}

	tcp {
	    port => 5000
	    codec => json
	}
}

## 필터 섹션 추가 - 로그 메시지를 전처리하는 로직 추가
filter {
  if [message] =~ /^\{.*\}$/ {  # 메시지가 JSON 형식일 경우에만 처리
      json {
        source => "message"
      }
  } else {
      # JSON 형식이 아닌 경우에는 다른 처리 로직
      grok {
        match => {
          "message" => '{"@timestamp":"%{TIMESTAMP_ISO8601:log_timestamp}","@version":"%{NUMBER:version}","message":"%{GREEDYDATA:log_message}","logger_name":"%{JAVACLASS:logger_name}","thread_name":"%{DATA:thread_name}","level":"%{LOGLEVEL:log_level}","level_value":"%{NUMBER:level_value}"}'
      }
    }
  }

    # 로그 레벨이 WARN 또는 ERROR인 경우를 필터링
  if [level] == "WARN" or [level] == "ERROR" {
  # WARN 또는 ERROR 로그는 그대로 둡니다.
  } else if "Exception" in [message] {
  # 메시지에 'Exception'이 포함된 경우 그대로 둡니다.
  } else {
  # 그 외의 모든 로그는 제거
    drop { }
  }
}

output {
	elasticsearch {
        hosts => ["http://elasticsearch:9200"]
		index => "elk-%{+YYYY.MM.dd}"
		user => "elastic"
		password => "${LOGSTASH_INTERNAL_PASSWORD}"
	}
}
